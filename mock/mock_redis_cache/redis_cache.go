// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock_redis_cache

import (
	mock "github.com/stretchr/testify/mock"
	cache "github.com/stuartshome/carpedia/cache"
)

// RedisCache is an autogenerated mock type for the RedisCache type
type RedisCache struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *RedisCache) Get(key string) *cache.Desc {
	ret := _m.Called(key)

	var r0 *cache.Desc
	if rf, ok := ret.Get(0).(func(string) *cache.Desc); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cache.Desc)
		}
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *RedisCache) GetAll() ([]*cache.Desc, error) {
	ret := _m.Called()

	var r0 []*cache.Desc
	if rf, ok := ret.Get(0).(func() []*cache.Desc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*cache.Desc)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Set provides a mock function with given fields: key, value
func (_m *RedisCache) Set(key string, value *cache.Desc) {
	_m.Called(key, value)
}
